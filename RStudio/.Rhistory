test = 1
maxs <- apply(my_data, 2, max)
mins <- apply(my_data, 2, min)
scaled <- as.data.frame(scale(my_data, center = mins, scale = maxs - mins))
print(my_data$No.)
my_data <- subset(my_data, select = No.)
my_data <- file.choose()
my_data = read.delim(file.choose(), header = TRUE, sep = "\t")
originalData = my_data
my_data <- subset(my_data, select = -No.)
set.seed(0670)
index <- sample(1:nrow(my_data),round(0.75*nrow(my_data)))
train <- data[index,]
index <- sample(1:nrow(scaled),round(0.75*nrow(scaled)))
train <- scaled[index,]
test <- scaled[-index,]
index <- sample(1:nrow(scaled),round(0.8*nrow(scaled)))
train <- scaled[index,]
test <- scaled[-index,]
scaled <- as.data.frame(scale(my_data, center = mins, scale = maxs - mins))
maxs <- apply(my_data, 2, max)
mins <- apply(my_data, 2, min)
scaled <- as.data.frame(scale(my_data, center = mins, scale = maxs - mins))
index <- sample(1:nrow(scaled),round(0.75*nrow(scaled)))
train <- scaled[index,]
test <- scaled[-index,]
library(neuralnet)
allVars <- colnames(my_data)
predictorVars <- [!allVars%in%"Rejects"]
predictorVars <- allVars[!allVars%in%"Rejects"]
predictorVars <- paste(predictorVars, collapse = "+")
form = as.formula(paste("Rejects~", predictorVars, collapse = "+"))
neuralModel <- neuralnet(form,data=train,hidden=c(2),linear.output=T)
plot(neuralModel)
predictions <- <- compute(neuralModel,test[,1:5])
predictions <- compute(neuralModel,test[,1:5])
str(predictions)
predictionsUnscaled <- predictions$net.result*(max(test$Rejects)-min(test$Rejects))+min(test$Rejects)
actualUnscaled <- (test$Rejects)*(max(test$Rejects)-min(test$Rejects))+min(test$Rejects)
plot(test$Rejects, predictionsUnscaled, col='blue',main='Real vs. Predicted',pch=1, cex=1)
abline(0,1, col="black")
sse <- sum((predictionsUnscaled - actualUnscaled)^2)
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
predictionsUnscaled <- predictions$net.result*(max(test$Rejects)-min(test$Rejects))+min(test$Rejects)
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(test$Rejects, predictionsUnscaled, col='blue',main='Real vs. Predicted',pch=1, cex=1)
abline(0,1, col="black")
plot(test$Rejects, predictionsUnscaled, col='blue',main='Real vs. Predicted',pch=18, cex=1)
plot(test$Rejects, predictionsUnscaled, col='blue',main='Real vs. Predicted',pch=18, cex=0.7)
abline(0,1, col="red")
plot(actualUnscaled$Rejects, predictionsUnscaled, col='blue',main='Real vs. Predicted',pch=1, cex=1)
plot(actualUnscaled, predictionsUnscaled, col='blue',main='Real vs. Predicted',pch=1, cex=1)
abline(0,1, col="black")
sse <- sum((predictionsUnscaled - actualUnscaled)^2)
sse <- sum((actualUnscaled - predictionsUnscaled )^2)
neuralModel <- neuralnet(form,data=train,hidden=c(3, 2),linear.output=T)
plot(neuralModel)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(actualUnscaled, predictionsUnscaled, col='blue',main='Real vs. Predicted',pch=1, cex=1)
abline(0,1, col="black")
sse2 <- sum((actualUnscaled - predictionsUnscaled )^2)
neuralModel <- neuralnet(form,data=train,hidden=c(3, 2),linear.output=T, algorithm = 'backprop')
neuralModel <- neuralnet(form,data=train,hidden=c(3, 2),linear.output=T, algorithm = 'backprop', learningrate = 0.1)
neuralModel <- neuralnet(form,data=train,hidden=c(3, 2),linear.output=T, algorithm = 'backprop', learningrate = 0.1, err.fct = "sse")
neuralModel <- neuralnet(form,data=train,hidden=c(3, 2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse")
neuralModel <- neuralnet(form,data=train,hidden=c(3, 2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7)
plot(neuralModel)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(actualUnscaled, predictionsUnscaled, col='blue',main='Real vs. Predicted',pch=1, cex=1)
abline(0,1, col="black")
sse3 <- sum((actualUnscaled - predictionsUnscaled )^2)
plot(actualUnscaled, predictionsUnscaled, col='red',main='Real vs. Predicted',pch=1, cex=1)
abline(0,1, col="black")
neuralModel <- neuralnet(form,data=train,hidden=c(4,3,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(actualUnscaled, predictionsUnscaled, col='yellow',main='Real vs. Predicted',pch=1, cex=1)
abline(0,1, col="black")
plot(actualUnscaled, predictionsUnscaled, col='yellow',main='Real vs. Predicted',pch=21, cex=1)
plot(actualUnscaled, predictionsUnscaled, col='green',main='Real vs. Predicted',pch=1, cex=1)
abline(0,1, col="black")
neuralModel <- neuralnet(form,data=train,hidden=c(4,3,2),linear.output=T, algorithm = 'backprop', learningrate = 0.01, err.fct = "sse", stepmax=1e7)
neuralModel <- neuralnet(form,data=train,hidden=c(4,3,2),linear.output=F, algorithm = 'backprop', learningrate = 0.01, err.fct = "sse", stepmax=1e7)
plot(neuralModel)
neuralModel <- neuralnet(form,data=train,hidden=c(4,3,2),linear.output=T, algorithm = 'backprop', learningrate = 0.005, err.fct = "sse", stepmax=1e7)
plot(neuralModel)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)  actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)  actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(actualUnscaled, predictionsUnscaled, col='orange',main='Real vs. Predicted',pch=20, cex=1)
abline(0,1, col="black")
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(actualUnscaled, predictionsUnscaled, col='orange',main='Real vs. Predicted',pch=20, cex=1)
abline(0,1, col="black")
sse4 <- sum((actualUnscaled - predictionsUnscaled )^2)
neuralModel <- neuralnet(form,data=train,hidden=c(4,3,2),linear.output=T, algorithm = 'backprop', learningrate = 0.00005, err.fct = "sse", stepmax=1e7)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.00005, err.fct = "sse", stepmax=1e7)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7)
plot(neuralModel)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'sigmoid')
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=F, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
plot(neuralModel)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(actualUnscaled, predictionsUnscaled, col='purple',main='Real vs. Predicted',pch=20, cex=1)
abline(0,1, col="black")
sse5 <- sum((actualUnscaled - predictionsUnscaled )^2)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=F, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
predictions <- compute(neuralModel,test[,1:5])
sse5Scaled <- sum((test$Rejects - predictions)^2)
sse5Scaled <- sum((test$Rejects - predictions$net.result)^2)
plot(neuralModel)
print(neuralModel$result.matrix)
neuralnet(form,data=train,hidden=c(3),linear.output=T, algorithm = 'backprop', learningrate = 0.01, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
neuralnet(form,data=train,hidden=c(3),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
neuralnet(form,data=train,hidden=c(3),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", act.fct = 'logistic')
neuralnet(form,data=train,hidden=c(3,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", act.fct = 'logistic')
neuralnet(form,data=train,hidden=c(3),linear.output=T, algorithm = 'backprop', learningrate = 0.01, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
neuralModel <- neuralnet(form,data=train,hidden=c(3),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
plot(neuralModel)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(actualUnscaled, predictionsUnscaled, col='purple',main='Real vs. Predicted',pch=20, cex=1)
abline(0,1, col="black")
str(sum((actualUnscaled - predictionsUnscaled )^2))
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
plot(neuralModel)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.0001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
plot(neuralModel)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=F, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
plot(neuralModel)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(actualUnscaled, predictionsUnscaled, col='black',main='Real vs. Predicted',pch=20, cex=1)
abline(0,1, col="red")
plot(actualUnscaled, predictionsUnscaled, col='black',main='Real vs. Predicted',pch=20, cex=1)
abline(0,1, col="red")
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'tanh')
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.003, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
neuralModel <- neuralnet(form,data=train,hidden=c(3,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", act.fct = 'logistic')
plot(neuralModel)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.01, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=F, algorithm = 'backprop', learningrate = 0.01, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
plot(neuralModel)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
plot(neuralModel)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
plot(neuralModel)
neuralModel <- neuralnet(form,data=train,hidden=c(4,2),linear.output=T, algorithm = 'backprop', learningrate = 0.001, err.fct = "sse", stepmax=1e7, act.fct = 'logistic')
plot(neuralModel)
predictions <- compute(neuralModel,test[,1:5])
predictionsUnscaled <- predictions$net.result*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
actualUnscaled <- (test$Rejects)*(max(my_data$Rejects)-min(my_data$Rejects))+min(my_data$Rejects)
plot(actualUnscaled, predictionsUnscaled, col='black',main='Real vs. Predicted',pch=20, cex=1)
abline(0,1, col="red")
sseFinal <- sum((actualUnscaled - predictionsUnscaled )^2)
title = sprintf("Real vs. Predicted%f", sseFinal)
title = sprintf("Real vs. Predicted %f", sseFinal)
plot(actualUnscaled, predictionsUnscaled, col='blue',main=title,pch=20, cex=1)
abline(0,1, col="black")
title = sprintf("Real vs. Predicted (Sum of Squared Errors: %f)", sseFinal)
plot(actualUnscaled, predictionsUnscaled, col='blue',main=title,pch=20, cex=1)
abline(0,1, col="black")
plot(actualUnscaled, predictionsUnscaled, xlab = 'Actual Value', ylab = 'Predicted Value' col='blue',main=title,pch=20, cex=1)
plot(actualUnscaled, predictionsUnscaled, xlab = 'Actual Value', ylab = 'Predicted Value', col='blue',main=title,pch=20, cex=1)
abline(0,1, col="black")
abline(0,1, col="red")
load("~/RStudio/.RData")
load("D:/OneDrive/Documents/RStudio/.RData")
